/*!
 * js-data-structures
 * http://github.com/Tyriar/js-data-structures
 *
 * Copyright 2015 Daniel Imms
 * Released under the MIT license
 * http://github.com/Tyriar/js-data-structures/blob/master/LICENSE
 */
!function(a,b){"use strict";"function"==typeof define&&define.amd?define([],function(){return a.FibonacciHeap=b()}):"object"==typeof exports?module.exports=b():a.FibonacciHeap=b()}(this,function(){"use strict";function a(a,b,c,e){return d(a),b.degree--,a.next===a?b.child=void 0:b.child=a.next,c=f(c,a,e),a.isMarked=!1,c}function b(c,d,e){var f=c.parent;return f&&(c.isMarked?(d=a(c,f,d,e),d=b(f,d,e)):c.isMarked=!0),d}function c(a,b){for(var c=[],d=new j(a);d.hasNext();){for(var g=d.next();c[g.degree];){if(b(g,c[g.degree])>0){var h=g;g=c[g.degree],c[g.degree]=h}e(c[g.degree],g,b),c[g.degree]=void 0,g.degree++}c[g.degree]=g}a=void 0;for(var i=0;i<c.length;i++)c[i]&&(c[i].next=c[i],c[i].prev=c[i],a=f(a,c[i],b));return a}function d(a){var b=a.prev,c=a.next;b.next=c,c.prev=b,a.next=a,a.prev=a}function e(a,b,c){d(a),b.child=f(a,b.child,c),a.parent=b,a.isMarked=!1}function f(a,b,c){if(!a&&!b)return void 0;if(!a)return b;if(!b)return a;var d=a.next;return a.next=b.next,a.next.prev=a,b.next=d,b.next.prev=b,c(a,b)<0?a:b}function g(a){var b=0,c=a;do b++,c.child&&(b+=g(c.child)),c=c.next;while(c!==a);return b}function h(a,b){this.key=a,this.value=b,this.prev=this,this.next=this,this.degree=0,this.parent=void 0,this.child=void 0,this.isMarked=void 0,this.isMinimum=void 0}var i=function(a){this.minNode=void 0,this.nodeCount=0,a&&(this.compare=a)};i.prototype.clear=function(){this.minNode=void 0,this.nodeCount=0},i.prototype.decreaseKey=function(c,d){if("undefined"==typeof c)throw"Cannot decrease key of non-existent node";if(this.compare({key:d},{key:c.key})>0)throw"New key is larger than old key";c.key=d;var e=c.parent;e&&this.compare(c,e)<0&&(a(c,e,this.minNode,this.compare),b(e,this.minNode,this.compare)),this.compare(c,this.minNode)<0&&(this.minNode=c)},i.prototype["delete"]=function(c){c.isMinimum=!0;var d=c.parent;d&&(a(c,d,this.minNode,this.compare),b(d,this.minNode,this.compare)),this.minNode=c,this.extractMinimum()},i.prototype.extractMinimum=function(){var a=this.minNode;if(a){if(a.child){var b=a.child;do b.parent=void 0,b=b.next;while(b!==a.child)}var e;this.minNode.next!==this.minNode&&(e=this.minNode.next),d(a),this.nodeCount--,this.minNode=f(e,a.child,this.compare),e&&(this.minNode=e,this.minNode=c(this.minNode,this.compare))}return a},i.prototype.findMinimum=function(){return this.minNode},i.prototype.insert=function(a,b){var c=new h(a,b);return this.minNode=f(this.minNode,c,this.compare),this.nodeCount++,c},i.prototype.isEmpty=function(){return void 0===this.minNode},i.prototype.size=function(){return this.isEmpty()?0:g(this.minNode)},i.prototype.union=function(a){this.minNode=f(this.minNode,a.minNode,this.compare),this.nodeCount+=a.nodeCount},i.prototype.compare=function(a,b){return a.key>b.key?1:a.key<b.key?-1:0};var j=function(a){if(a){this.items=[];var b=a;do this.items.push(b),b=b.next;while(a!==b)}};return j.prototype.hasNext=function(){return this.items.length>0},j.prototype.next=function(){return this.items.shift()},i});